{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["library","add","faFacebookF","faTwitterSquare","faTumblrSquare","faQuoteLeft","allQuotes","quote","author","colorOne","colorTwo","Presentation","props","state","dex","nextBtn","bind","prevBtn","this","setState","length","colors","one","two","toTwit","toTumblr","id","style","backgroundColor","color","icon","href","target","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80564870.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faFacebookF, faTwitterSquare, faTumblrSquare} from '@fortawesome/free-brands-svg-icons'\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faFacebookF, faTwitterSquare, faTumblrSquare, faQuoteLeft);\n\nconst allQuotes = [\n  {\n    quote: 'The greatest glory in living lies not in never falling, but in rising every time we fall.\"',\n    author: \"-Nelson Mandela-\",\n    colorOne: \"#1C1C1BFF\",\n    colorTwo : \"#CE4A7EFF\"\n  },\n  {\n    quote: 'The way to get started is to quit talking and begin doing.\"',\n    author: \"-Walt Disney-\",\n    colorOne: \"#000000FF\",\n    colorTwo : \"#FFFFFFFF\"\n  },\n  {\n    quote: 'If life were predictable it would cease to be life, and be without flavor.\" ',\n    author: \"-Eleanor Roosevelt-\",\n    colorOne: \"#00A4CCFFF\",\n    colorTwo : \"#F95700FF\"\n  },\n  {\n    quote: 'Whoever is happy will make others happy too.\"',\n    author: \"-Anne Frank-\",\n    colorOne: \"#00203FFF\",\n    colorTwo : \"#ADEFD1FF\"\n  },\n  {\n    quote: 'If you set your goals ridiculously high and it\\'s a failure, you will fail above everyone else\\'s success.\"',\n    author: \"-James Cameron-\",\n    colorOne: \"#606060FF\",\n    colorTwo : \"#D6ED17FF\"\n  },\n  {\n    quote: 'Life is what happens when you\\'re busy making other plans.',\n    author: \"-John Lennon-\",\n    colorOne: \"#0063B2FF\",\n    colorTwo : \"#9CC3D5FF\"\n  },\n  {\n    quote: 'Spread love everywhere you go. Let no one ever come to you without leaving happier.\"',\n    author: \"-Mother Teresa-\",\n    colorOne: \"#101820FF\",\n    colorTwo : \"#FEE715FF\"\n  },\n  {\n    quote: 'When you reach the end of your rope, tie a knot in it and hang on.\"',\n    author: \"-Franklin D. Roosevelt-\",\n    colorOne: \"#101820FF\",\n    colorTwo : \"#F2AA4CFF\"\n  },\n  {\n    quote: 'Always remember that you are absolutely unique. Just like everyone else.\"',\n    author: \"-Margaret Mead-\",\n    colorOne: \"#603F83FF\",\n    colorTwo : \"#C7D3D4FF\"\n  },\n  {\n    quote: 'Don\\'t judge each day by the harvest you reap but by the seeds that you plant.\"',\n    author: \"-Robert Louis Stevenson-\",\n    colorOne: \"#2BAE66FF\",\n    colorTwo : \"#FCF6F5FF\"\n  }\n];\n\n/*\n ============== React ==============\n */\n\nclass Presentation extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      dex: 0\n    }\n\n    this.nextBtn = this.nextBtn.bind(this);\n    this.prevBtn = this.prevBtn.bind(this);\n  }\n\n  nextBtn(){\n    this.setState({\n      dex: this.state.dex === allQuotes.length-1 ? 0 : this.state.dex + 1\n    });\n  }\n\n  prevBtn(){\n    this.setState({\n      dex: this.state.dex === 0 ? allQuotes.length-1 : this.state.dex - 1\n    });\n  }\n\n  render(){\n\n    let colors = {\n      one: allQuotes[this.state.dex][\"colorOne\"],\n      two: allQuotes[this.state.dex][\"colorTwo\"]\n    };\n\n    let toTwit = \"https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\" + allQuotes[this.state.dex].quote + allQuotes[this.state.dex].author;\n    let toTumblr = \"https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes,freecodecamp&caption=\" + allQuotes[this.state.dex].author + \"&content=\" + allQuotes[this.state.dex].quote + \"&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button\";\n\n    return (\n      <div id=\"back-color\" style={{backgroundColor: colors.one}}>\n        <div id=\"quote-box\" style={{backgroundColor: colors.two, color: colors.one}}>\n          <div id=\"icon\">\n            <FontAwesomeIcon icon=\"quote-left\" />\n          </div>\n\n          <a href={toTumblr} target=\"_blank\" id=\"tumblr\" style={{color: colors.one}}>\n            <FontAwesomeIcon icon={['fab', 'tumblr-square']} />\n          </a>\n          <a href={toTwit} target=\"_blank\" id=\"tweet-quote\" style={{color: colors.one}}>\n            <FontAwesomeIcon icon={['fab', 'twitter-square']} />\n          </a>\n         \n          <h1 id=\"text\">{allQuotes[this.state.dex][\"quote\"]}</h1>\n          <p id=\"author\">{allQuotes[this.state.dex][\"author\"]}</p>\n          <div id=\"btns-container\">\n            <button id=\"new-quote\" onClick={this.nextBtn} style={{backgroundColor: colors.one, color: colors.two}}>Previous Quote</button>\n            <button id=\"next-quote\" onClick={this.prevBtn} style={{backgroundColor: colors.one, color: colors.two}}>Next Quote</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Presentation;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Presentation from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Presentation />\n  </React.StrictMode>,\n  document.getElementById('body')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}